@startuml pid

class Integrator {
	+Integrator()
	+Integrator(SAMPLE_TIME_s, starting_value)
	+Integrator(Integrator)
	+float sampleTime()
	+float integralAcumulator()
	+float operator()(value)

	-const float SAMPLE_TIME_s
	-float integral_acum
}

class Derivator {
	+Derivator()
	+Derivator(SAMPLE_TIME_s, starting_value)
	+Derivator(Derivator)
	+float sampleTime()
	+float previousValue()
	+float operator()(value)

	-const float SAMPLE_TIME_s
	-float prev_val
}

class PIDController {
	+const int KP = 0
	+const int KI = 1
	+const int KD = 2
	+PIDController()
	+PIDController(SAMPLE_TIME_s, K_p, K_i, K_d, integrator_starting_value, derivator_starting_value)
	+PIDController(SAMPLE_TIME_s, K_gains[], integrator_starting_vaule, derivator_starting_value)
	+PIDController(PIDController)
	+float sampleTime()
	+Derivator derivator()
	+Integrator integrator()
	+void getKs(float*out)
	+float saturator_min()
	+float saturator_max()
	+void addAntiWindup(saturator_min, saturator_max)
	+float operator() (value)
	+float operator[] (int idx)

	-const float SAMPLE_TIME_s
	-float K_gains[3]
	-Integrator intgr
	-Derivator deriv
	-float saturator_max
	-float saturator_min
	-float integral
}

@enduml